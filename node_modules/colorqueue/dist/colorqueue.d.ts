import * as penner from 'pennerts';
export interface ILedStrip {
    all(r: number, g: number, b: number, a?: number): void;
    set(led: number, r: number, g: number, b: number, a?: number): void;
    clear(): void;
    off(): void;
    sync(): void;
}
export interface IColor {
    r: number;
    b: number;
    g: number;
    a: number;
}
export interface IColorTransition extends IColor {
    duration: number;
    transition: string;
    order: number;
}
export declare class ColorQueue {
    colorTransitionIndex: number;
    colorTransitions: IColorTransition[];
    defaultTransitionFunction: penner.IPennerFunction;
    lastStartTime: number;
    lastColor: IColor;
    ledInterval: number;
    ledStrip: ILedStrip;
    ledUpdaterTimerId: NodeJS.Timer;
    constructor(ledStrip: ILedStrip, ledInterval?: number);
    set(colors: IColorTransition[]): void;
    add(color: IColorTransition): void;
    remove(id: number): void;
    clear(): void;
    start(): void;
    stop(): void;
    updateLeds(): void;
}
export default ColorQueue;
